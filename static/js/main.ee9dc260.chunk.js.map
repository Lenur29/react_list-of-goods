{"version":3,"sources":["components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","goods","map","good","goodsFromServer","App","state","isButtonClicked","isReversed","sortBy","showGoods","setState","reverseGoods","currentState","sortByAlphabet","sortByLength","reset","this","visibleGoods","slice","sort","a","b","localeCompare","length","reverse","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAkBeA,EAZmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnC,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,SCNXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAQ,CACNC,iBAAiB,EACjBN,MAAOG,EACPI,YAAY,EACZC,OAAQ,I,EAGVC,UAAY,WACV,EAAKC,SAAS,CAAEJ,iBAAiB,K,EAGnCK,aAAe,WACb,EAAKD,UAAS,SAACE,GAAD,MAAmB,CAC/BL,YAAaK,EAAaL,gB,EAI9BM,eAAiB,WACf,EAAKH,SAAS,CAAEF,OAAQ,c,EAG1BM,aAAe,WACb,EAAKJ,SAAS,CAAEF,OAAQ,Y,EAG1BO,MAAQ,WACN,EAAKL,SAAS,CACZH,YAAY,EACZC,OAAQ,M,4CAIZ,WACE,MAKIQ,KAAKX,MAJPC,EADF,EACEA,gBACAN,EAFF,EAEEA,MACAO,EAHF,EAGEA,WACAC,EAJF,EAIEA,OAGIS,EAAejB,EAAMkB,QAmB3B,OAjBAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQb,GACN,IAAK,WACH,OAAOY,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAIThB,GACFU,EAAaO,UAIb,sBAAKC,UAAU,MAAf,UACE,uCACCnB,GACC,qCACE,cAAC,EAAD,CAAUN,MAAOiB,IACjB,wBACES,KAAK,SACLC,QAASX,KAAKL,aAFhB,qBAOA,wBACEe,KAAK,SACLC,QAASX,KAAKH,eAFhB,iCAOA,wBACEa,KAAK,SACLC,QAASX,KAAKF,aAFhB,4BAOA,wBACEY,KAAK,SACLC,QAASX,KAAKD,MAFhB,uBAQFT,GACA,wBACEoB,KAAK,SACLC,QAASX,KAAKP,UAFhB,0B,GAhGQmB,IAAMC,WA4GTzB,ICjIf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ee9dc260.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nconst GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default GoodList;\n","import React from 'react';\nimport './App.css';\nimport GoodList from './components/GoodList/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isButtonClicked: boolean,\n  goods: string[],\n  isReversed: boolean,\n  sortBy: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isButtonClicked: false,\n    goods: goodsFromServer,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  showGoods = () => {\n    this.setState({ isButtonClicked: true });\n  };\n\n  reverseGoods = () => {\n    this.setState((currentState) => ({\n      isReversed: !currentState.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortBy: 'alphabet' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const {\n      isButtonClicked,\n      goods,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    const visibleGoods = goods.slice();\n\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return a.localeCompare(b);\n\n        case 'length':\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isButtonClicked && (\n          <>\n            <GoodList goods={visibleGoods} />\n            <button\n              type=\"button\"\n              onClick={this.reverseGoods}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByAlphabet}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </>\n        )}\n        {!isButtonClicked && (\n          <button\n            type=\"button\"\n            onClick={this.showGoods}\n          >\n            Start\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}